var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.377,1,1.377]],["body/controllers/AppController.html",[0,2.09,1,2.09,2,2.346,3,0.59,4,0.478,5,0.478,6,2.346,7,0.712,8,1.512,9,3.516,10,2.346,11,0.062,12,1.002,13,2.971,14,1.177,15,2.09,16,0.758,17,1.002,18,1.671,19,2.346,20,0.59,21,0.282,22,2.971,23,2.346,24,1.934,25,2.971,26,0.037,27,0.047,28,0.037]],["title/modules/AppModule.html",[29,0.848,30,1.377]],["body/modules/AppModule.html",[1,2.029,2,2.538,3,0.456,4,0.37,5,0.37,11,0.062,16,0.891,17,0.775,18,1.733,19,1.815,20,0.456,21,0.218,26,0.028,27,0.04,28,0.028,29,1.249,30,2.582,31,0.91,32,1.068,33,1.496,34,1.496,35,1.068,36,2.412,37,1.496,38,1.815,39,1.815,40,1.815,41,2.034,42,2.034,43,2.092,44,1.496,45,1.496,46,2.298,47,2.538,48,1.815,49,1.496,50,3.214,51,2.298,52,2.298,53,2.298,54,2.298,55,2.298,56,2.298,57,1.496,58,2.298]],["title/injectables/AppService.html",[18,0.996,59,1.169]],["body/injectables/AppService.html",[3,0.626,4,0.508,5,0.508,7,0.757,8,1.571,9,3.595,11,0.061,12,1.064,14,1.25,15,2.172,16,0.626,17,1.064,18,1.571,20,0.626,21,0.3,24,2.055,26,0.039,27,0.049,28,0.039,59,1.844,60,2.055,61,2.492,62,3.156,63,3.156,64,3.156]],["title/classes/BaseService.html",[21,0.239,65,1.638]],["body/classes/BaseService.html",[3,0.308,4,0.25,5,0.25,7,0.372,8,0.952,11,0.062,12,1.379,14,1.421,16,0.658,20,0.308,21,0.147,23,2.997,24,2.336,26,0.019,27,0.03,28,0.019,65,1.565,66,0.849,67,1.225,68,1.898,69,1.612,70,1.898,71,3.795,72,3.126,73,2.997,74,1.316,75,1.898,76,1.898,77,1.898,78,1.916,79,1.898,80,1.551,81,2.404,82,3.588,83,1.503,84,2.404,85,2.078,86,1.764,87,1.379,88,2.078,89,1.551,90,1.898,91,1.551,92,2.997,93,2.794,94,1.898,95,3.389,96,1.551,97,1.612,98,1.898,99,1.551,100,1.898,101,1.551,102,1.898,103,1.551,104,1.225,105,1.225,106,0.721,107,1.551,108,1.225,109,1.551,110,1.551,111,1.551,112,1.551,113,1.551,114,1.551,115,1.225,116,1.551,117,1.551,118,1.551]],["title/interfaces/BaseServiceInterface.html",[69,1.377,119,1.377]],["body/interfaces/BaseServiceInterface.html",[3,0.43,4,0.349,5,0.349,7,0.519,8,1.22,11,0.061,12,1.392,14,1.635,16,0.611,20,0.43,26,0.027,27,0.038,28,0.027,69,1.687,74,1.687,75,2.433,76,2.433,77,2.433,79,2.433,85,2.261,86,1.919,87,1.392,88,2.261,90,2.433,92,3.26,93,3.032,94,2.433,95,3.678,97,1.964,98,2.433,100,2.433,102,2.433,105,1.709,106,1.006,108,1.709,119,1.185,120,2.165,121,1.709,122,2.165,123,2.165,124,2.165,125,2.165,126,2.165]],["title/modules/DatabaseModule.html",[29,0.848,41,1.169]],["body/modules/DatabaseModule.html",[3,0.541,4,0.439,5,0.439,11,0.062,16,0.855,17,0.918,20,0.541,21,0.259,26,0.034,27,0.044,28,0.034,29,1.216,31,1.079,41,1.677,47,2.849,48,2.849,49,1.774,78,1.774,87,0.918,127,2.725,128,2.725,129,2.151,130,1.976,131,2.725,132,4.307,133,2.725,134,2.725,135,2.151,136,2.725,137,2.725,138,2.725,139,2.725,140,2.725,141,2.725,142,1.774,143,2.725,144,2.725,145,2.725,146,2.725,147,2.725]],["title/modules/LoggerModule.html",[29,0.848,42,1.169]],["body/modules/LoggerModule.html",[3,0.549,4,0.445,5,0.445,11,0.06,16,0.723,17,0.932,20,0.549,21,0.263,26,0.034,27,0.045,28,0.034,29,1.374,31,1.095,32,1.285,33,1.8,34,1.8,35,1.285,36,2.653,37,2.653,42,2.191,43,2.372,44,1.8,45,1.8,83,1.963,148,2.183,149,2.183,150,2.183,151,2.765,152,3.644,153,2.765]],["title/injectables/LoggerService.html",[59,1.169,83,0.996]],["body/injectables/LoggerService.html",[3,0.332,4,0.269,5,0.269,7,0.401,8,1.009,11,0.061,12,1.251,14,1.47,15,2.742,16,0.332,17,0.564,20,0.332,21,0.159,26,0.021,27,0.031,28,0.021,59,1.184,60,1.088,72,2.436,83,1.009,85,2.032,86,1.725,87,1.251,88,2.032,154,1.32,155,2.011,156,2.547,157,2.547,158,2.547,159,2.547,160,2.547,161,2.547,162,4.813,163,1.672,164,3.712,165,3.911,166,4.38,167,2.547,168,3.449,169,1.672,170,2.547,171,1.672,172,2.547,173,1.672,174,2.547,175,1.672,176,2.547,177,1.672,178,1.672,179,1.672,180,1.672,181,1.672,182,1.672]],["title/classes/User.html",[21,0.239,130,1.377]],["body/classes/User.html",[3,0.386,4,0.313,5,0.313,7,0.466,10,3.376,11,0.061,12,1.441,15,2.553,16,0.386,20,0.386,21,0.185,26,0.024,27,0.035,28,0.024,57,2.421,66,1.065,70,2.252,86,1.729,87,1.441,97,1.849,104,2.666,106,0.904,130,1.562,142,2.198,155,2.252,183,1.536,184,2.666,185,2.666,186,2.666,187,2.666,188,1.946,189,2.936,190,3.719,191,1.946,192,1.946,193,1.946,194,2.853,195,3.377,196,1.946,197,4.275,198,1.946,199,1.946,200,2.252,201,1.946,202,1.946,203,1.946,204,1.946,205,2.853,206,2.853,207,1.946,208,2.853,209,1.267,210,1.946,211,2.666]],["title/coverage.html",[212,2.227]],["body/coverage.html",[0,1.514,1,1.514,5,0.445,6,2.183,11,0.06,18,1.095,21,0.387,26,0.034,27,0.045,28,0.034,35,1.285,59,1.694,61,2.183,65,1.8,67,2.183,69,1.514,74,1.514,83,1.095,87,0.932,119,1.514,121,2.183,130,1.514,154,2.183,183,2.183,209,1.8,212,1.8,213,2.765,214,2.765,215,2.765,216,4.784,217,3.644,218,2.183,219,2.183,220,1.8,221,2.765,222,3.644,223,2.765,224,2.183,225,2.765,226,2.765,227,2.765,228,2.183,229,2.765,230,2.183]],["title/classes/createUsersTable1609749949313.html",[21,0.239,220,1.638]],["body/classes/createUsersTable1609749949313.html",[3,0.371,4,0.301,5,0.301,7,0.448,8,1.096,11,0.062,12,0.933,14,1.096,16,0.371,20,0.371,21,0.177,26,0.023,27,0.034,28,0.023,57,2.146,66,1.023,68,2.185,74,1.805,78,2.654,85,1.515,86,2.124,87,1.492,88,1.515,93,2.374,97,1.023,106,0.868,115,2.185,142,1.216,184,1.475,185,1.475,186,1.475,187,1.475,189,2.185,200,1.475,209,2.374,211,2.603,218,2.603,219,1.475,220,1.802,228,1.475,230,2.185,231,3.297,232,4.077,233,2.768,234,2.768,235,2.768,236,4.426,237,1.868,238,2.768,239,1.868,240,1.868,241,1.868,242,1.868,243,1.868,244,1.868,245,1.868,246,1.868,247,3.646,248,1.868,249,2.768,250,1.868]],["title/dependencies.html",[32,1.405,251,2.108]],["body/dependencies.html",[11,0.062,17,1.029,26,0.038,27,0.048,28,0.038,32,1.419,49,1.987,106,1.419,129,2.41,135,2.41,252,4.273,253,3.053,254,3.053,255,3.053,256,3.885,257,3.053,258,3.053,259,3.053,260,3.053,261,3.053,262,3.053,263,3.053,264,3.053,265,3.053,266,3.053,267,3.053,268,3.053,269,3.053,270,3.053,271,3.053]],["title/miscellaneous/functions.html",[272,1.664,273,2.386]],["body/miscellaneous/functions.html",[7,0.893,11,0.054,26,0.046,27,0.054,28,0.046,35,2.169,224,2.941,272,2.941,273,2.941,274,3.725]],["title/index.html",[7,0.505,275,2.108,276,2.108]],["body/index.html",[4,0.384,11,0.061,26,0.029,27,0.041,28,0.029,73,1.885,212,1.554,277,2.387,278,2.387,279,3.299,280,2.387,281,2.387,282,2.387,283,2.387,284,2.387,285,2.387,286,2.387,287,3.781,288,2.387,289,2.387,290,2.387,291,4.539,292,2.387,293,2.387,294,2.387,295,4.428,296,2.387,297,2.387,298,3.299,299,2.387,300,2.387,301,2.387,302,2.387,303,3.299,304,3.299,305,2.387,306,2.387,307,2.387,308,3.299,309,3.299,310,2.387,311,2.387,312,2.387,313,2.387,314,2.387,315,1.885,316,2.387,317,2.387,318,2.387,319,2.387,320,2.387,321,2.387,322,2.387,323,2.387,324,2.387,325,2.387,326,2.387,327,2.387,328,2.387,329,2.387,330,2.387,331,2.387,332,2.387,333,2.387]],["title/modules.html",[31,1.355]],["body/modules.html",[11,0.053,26,0.044,27,0.053,28,0.044,30,1.948,31,1.409,41,1.654,42,1.654,315,3.373,334,4.271,335,4.271,336,4.577,337,3.558,338,3.558]],["title/overview.html",[339,2.701]],["body/overview.html",[0,1.514,11,0.058,18,1.614,26,0.034,27,0.045,28,0.034,29,0.932,30,2.619,31,1.095,32,1.285,33,1.8,34,1.8,35,1.285,36,1.8,37,1.8,38,2.183,39,2.183,40,2.183,41,1.894,42,2.149,43,2.372,44,1.8,45,1.8,60,1.8,66,1.514,83,1.867,119,1.514,148,2.183,149,2.183,150,2.183,339,2.183,340,3.644,341,3.644,342,2.765]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"coverage.html":{},"classes/createUsersTable1609749949313.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":216,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":226,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":341,"title":{},"body":{"overview.html":{}}}],["2",{"_index":342,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":340,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":316,"title":{},"body":{"index.html":{}}}],["app",{"_index":293,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":285,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":78,"title":{},"body":{"classes/BaseService.html":{},"modules/DatabaseModule.html":{},"classes/createUsersTable1609749949313.html":{}}}],["author",{"_index":326,"title":{},"body":{"index.html":{}}}],["available",{"_index":338,"title":{},"body":{"modules.html":{}}}],["await",{"_index":115,"title":{},"body":{"classes/BaseService.html":{},"classes/createUsersTable1609749949313.html":{}}}],["backers",{"_index":317,"title":{},"body":{"index.html":{}}}],["base.service.interface",{"_index":107,"title":{},"body":{"classes/BaseService.html":{}}}],["baseentity",{"_index":104,"title":{},"body":{"classes/BaseService.html":{},"classes/User.html":{}}}],["baseservice",{"_index":65,"title":{"classes/BaseService.html":{}},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["baseserviceinterface",{"_index":69,"title":{"interfaces/BaseServiceInterface.html":{}},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":336,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":334,"title":{},"body":{"modules.html":{}}}],["building",{"_index":280,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/BaseService.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"coverage.html":{},"classes/createUsersTable1609749949313.html":{}}}],["classes",{"_index":66,"title":{},"body":{"classes/BaseService.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":148,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":149,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":150,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["column",{"_index":197,"title":{},"body":{"classes/User.html":{}}}],["column({default",{"_index":199,"title":{},"body":{"classes/User.html":{}}}],["columns",{"_index":241,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["config/database.config",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["configmodule.forroot",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":132,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get(\"databasehost",{"_index":137,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get(\"databasename",{"_index":145,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get(\"databasepassword",{"_index":143,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get(\"databaseport",{"_index":139,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get(\"databaseusername",{"_index":141,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["constructor",{"_index":80,"title":{},"body":{"classes/BaseService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(repository",{"_index":81,"title":{},"body":{"classes/BaseService.html":{}}}],["context",{"_index":162,"title":{},"body":{"injectables/LoggerService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":212,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":74,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"coverage.html":{},"classes/createUsersTable1609749949313.html":{}}}],["create(data",{"_index":90,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["createdat",{"_index":184,"title":{},"body":{"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["createdatecolumn",{"_index":205,"title":{},"body":{"classes/User.html":{}}}],["createdatecolumn({default",{"_index":188,"title":{},"body":{"classes/User.html":{}}}],["createuserstable1609749949313",{"_index":220,"title":{"classes/createUsersTable1609749949313.html":{}},"body":{"coverage.html":{},"classes/createUsersTable1609749949313.html":{}}}],["custom.logger",{"_index":153,"title":{},"body":{"modules/LoggerModule.html":{}}}],["data",{"_index":92,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["database",{"_index":144,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["databaseconfig",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["databasemodule",{"_index":41,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["debug",{"_index":156,"title":{},"body":{"injectables/LoggerService.html":{}}}],["debug(message",{"_index":161,"title":{},"body":{"injectables/LoggerService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/User.html":{}}}],["default",{"_index":211,"title":{},"body":{"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["delete",{"_index":75,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["delete(id",{"_index":94,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["deleteresult",{"_index":105,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":286,"title":{},"body":{"index.html":{}}}],["development",{"_index":294,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["down",{"_index":233,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["down(queryrunner",{"_index":235,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["e2e",{"_index":305,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":281,"title":{},"body":{"index.html":{}}}],["email",{"_index":185,"title":{},"body":{"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["entities",{"_index":146,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["entity",{"_index":206,"title":{},"body":{"classes/User.html":{}}}],["entityid",{"_index":95,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["error",{"_index":157,"title":{},"body":{"injectables/LoggerService.html":{}}}],["error(message",{"_index":167,"title":{},"body":{"injectables/LoggerService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}],["express",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":155,"title":{},"body":{"injectables/LoggerService.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"coverage.html":{},"classes/createUsersTable1609749949313.html":{}}}],["findall",{"_index":76,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["findall(data",{"_index":98,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["findbyid",{"_index":77,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["findbyid(id",{"_index":100,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["framework",{"_index":279,"title":{},"body":{"index.html":{}}}],["free",{"_index":200,"title":{},"body":{"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["function",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":273,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generationstrategy",{"_index":245,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":275,"title":{"index.html":{}},"body":{}}],["global",{"_index":152,"title":{},"body":{"modules/LoggerModule.html":{}}}],["graph",{"_index":337,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":312,"title":{},"body":{"index.html":{}}}],["hello",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":323,"title":{},"body":{"index.html":{}}}],["host",{"_index":136,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["https://nestjs.com",{"_index":330,"title":{},"body":{"index.html":{}}}],["id",{"_index":97,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["identifier",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":68,"title":{},"body":{"classes/BaseService.html":{},"classes/createUsersTable1609749949313.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["increment",{"_index":246,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["inject",{"_index":147,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["injectable",{"_index":59,"title":{"injectables/AppService.html":{},"injectables/LoggerService.html":{}},"body":{"injectables/AppService.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["injectables",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["installation",{"_index":290,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":292,"title":{},"body":{"index.html":{}}}],["int",{"_index":242,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["interface",{"_index":119,"title":{"interfaces/BaseServiceInterface.html":{}},"body":{"interfaces/BaseServiceInterface.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":120,"title":{},"body":{"interfaces/BaseServiceInterface.html":{}}}],["isgenerated",{"_index":244,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["isglobal",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["isprimary",{"_index":243,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["isunique",{"_index":248,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["join",{"_index":319,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":327,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}],["license",{"_index":333,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":309,"title":{},"body":{"index.html":{}}}],["limit",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["load",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":158,"title":{},"body":{"injectables/LoggerService.html":{}}}],["log(message",{"_index":170,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logger",{"_index":72,"title":{},"body":{"classes/BaseService.html":{},"injectables/LoggerService.html":{}}}],["logger/custom.logger",{"_index":109,"title":{},"body":{"classes/BaseService.html":{}}}],["logger/logger.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule",{"_index":42,"title":{"modules/LoggerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerservice",{"_index":83,"title":{"injectables/LoggerService.html":{}},"body":{"classes/BaseService.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"coverage.html":{},"classes/createUsersTable1609749949313.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["message",{"_index":164,"title":{},"body":{"injectables/LoggerService.html":{}}}],["metadata",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/LoggerService.html":{},"classes/createUsersTable1609749949313.html":{}}}],["migrationinterface",{"_index":231,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["miscellaneous",{"_index":272,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":308,"title":{},"body":{"index.html":{}}}],["mode",{"_index":298,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":322,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":135,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":328,"title":{},"body":{"index.html":{}}}],["name",{"_index":86,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["nest",{"_index":287,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":332,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":129,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["new",{"_index":228,"title":{},"body":{"coverage.html":{},"classes/createUsersTable1609749949313.html":{}}}],["node.js",{"_index":278,"title":{},"body":{"index.html":{}}}],["now",{"_index":189,"title":{},"body":{"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["npm",{"_index":291,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":190,"title":{},"body":{"classes/User.html":{}}}],["number",{"_index":194,"title":{},"body":{"classes/User.html":{}}}],["open",{"_index":310,"title":{},"body":{"index.html":{}}}],["optional",{"_index":88,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/LoggerService.html":{},"classes/createUsersTable1609749949313.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}],["overview",{"_index":339,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":251,"title":{"dependencies.html":{}},"body":{}}],["paidtype",{"_index":186,"title":{},"body":{"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/LoggerService.html":{},"classes/createUsersTable1609749949313.html":{}}}],["password",{"_index":142,"title":{},"body":{"modules/DatabaseModule.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["please",{"_index":320,"title":{},"body":{"index.html":{}}}],["port",{"_index":138,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["primarygeneratedcolumn",{"_index":195,"title":{},"body":{"classes/User.html":{}}}],["production",{"_index":300,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":277,"title":{},"body":{"index.html":{}}}],["project",{"_index":311,"title":{},"body":{"index.html":{}}}],["promise",{"_index":93,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"classes/createUsersTable1609749949313.html":{}}}],["properties",{"_index":70,"title":{},"body":{"classes/BaseService.html":{},"classes/User.html":{}}}],["protected",{"_index":71,"title":{},"body":{"classes/BaseService.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}],["public",{"_index":232,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["queryrunner",{"_index":236,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["queryrunner.createtable",{"_index":240,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["queryrunner.droptable(\"users",{"_index":250,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["r",{"_index":82,"title":{},"body":{"classes/BaseService.html":{}}}],["rate",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":321,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseService.html":{}}}],["reflect",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":73,"title":{},"body":{"classes/BaseService.html":{},"index.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"coverage.html":{},"classes/createUsersTable1609749949313.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"coverage.html":{},"classes/createUsersTable1609749949313.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"injectables/LoggerService.html":{},"classes/createUsersTable1609749949313.html":{}}}],["rimraf",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":295,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":282,"title":{},"body":{"index.html":{}}}],["scope",{"_index":176,"title":{},"body":{"injectables/LoggerService.html":{}}}],["scope.transient",{"_index":177,"title":{},"body":{"injectables/LoggerService.html":{}}}],["server",{"_index":283,"title":{},"body":{"index.html":{}}}],["side",{"_index":284,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"modules/DatabaseModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{},"index.html":{}}}],["sponsors",{"_index":314,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":274,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["src/database/database.module.ts",{"_index":127,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/migration/1609749949313",{"_index":218,"title":{},"body":{"coverage.html":{},"classes/createUsersTable1609749949313.html":{}}}],["src/generic/base.service.interface.ts",{"_index":121,"title":{},"body":{"interfaces/BaseServiceInterface.html":{},"coverage.html":{}}}],["src/generic/base.service.interface.ts:11",{"_index":123,"title":{},"body":{"interfaces/BaseServiceInterface.html":{}}}],["src/generic/base.service.interface.ts:13",{"_index":125,"title":{},"body":{"interfaces/BaseServiceInterface.html":{}}}],["src/generic/base.service.interface.ts:5",{"_index":122,"title":{},"body":{"interfaces/BaseServiceInterface.html":{}}}],["src/generic/base.service.interface.ts:7",{"_index":124,"title":{},"body":{"interfaces/BaseServiceInterface.html":{}}}],["src/generic/base.service.interface.ts:9",{"_index":126,"title":{},"body":{"interfaces/BaseServiceInterface.html":{}}}],["src/generic/base.service.ts",{"_index":67,"title":{},"body":{"classes/BaseService.html":{},"coverage.html":{}}}],["src/generic/base.service.ts:16",{"_index":99,"title":{},"body":{"classes/BaseService.html":{}}}],["src/generic/base.service.ts:20",{"_index":101,"title":{},"body":{"classes/BaseService.html":{}}}],["src/generic/base.service.ts:24",{"_index":91,"title":{},"body":{"classes/BaseService.html":{}}}],["src/generic/base.service.ts:28",{"_index":103,"title":{},"body":{"classes/BaseService.html":{}}}],["src/generic/base.service.ts:33",{"_index":96,"title":{},"body":{"classes/BaseService.html":{}}}],["src/generic/base.service.ts:8",{"_index":89,"title":{},"body":{"classes/BaseService.html":{}}}],["src/generic/base.service.ts:9",{"_index":84,"title":{},"body":{"classes/BaseService.html":{}}}],["src/logger/custom.logger.ts",{"_index":154,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/logger/custom.logger.ts:10",{"_index":175,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/logger/custom.logger.ts:15",{"_index":171,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/logger/custom.logger.ts:20",{"_index":163,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/logger/custom.logger.ts:25",{"_index":173,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/logger/custom.logger.ts:5",{"_index":169,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/logger/logger.module.ts",{"_index":151,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/main.ts",{"_index":224,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/user.entity.ts",{"_index":183,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:14",{"_index":196,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:18",{"_index":193,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:21",{"_index":198,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:24",{"_index":202,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:27",{"_index":201,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:33",{"_index":191,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:39",{"_index":204,"title":{},"body":{"classes/User.html":{}}}],["start",{"_index":296,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":299,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":301,"title":{},"body":{"index.html":{}}}],["started",{"_index":276,"title":{"index.html":{}},"body":{}}],["starter",{"_index":289,"title":{},"body":{"index.html":{}}}],["statements",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":324,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/LoggerService.html":{},"classes/User.html":{}}}],["super.debug(message",{"_index":181,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super.error(message",{"_index":178,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super.log(message",{"_index":180,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super.verbose(message",{"_index":182,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super.warn(message",{"_index":179,"title":{},"body":{"injectables/LoggerService.html":{}}}],["support",{"_index":315,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":335,"title":{},"body":{"modules.html":{}}}],["table",{"_index":230,"title":{},"body":{"coverage.html":{},"classes/createUsersTable1609749949313.html":{}}}],["table.ts",{"_index":219,"title":{},"body":{"coverage.html":{},"classes/createUsersTable1609749949313.html":{}}}],["table.ts:4",{"_index":239,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["table.ts:49",{"_index":237,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":304,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":307,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":306,"title":{},"body":{"index.html":{}}}],["tests",{"_index":303,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":313,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.findbyid(id",{"_index":117,"title":{},"body":{"classes/BaseService.html":{}}}],["this.logger",{"_index":111,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository",{"_index":110,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.delete(id",{"_index":118,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.find",{"_index":112,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.findone(id",{"_index":113,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.save(data",{"_index":114,"title":{},"body":{"classes/BaseService.html":{}}}],["this.repository.update(id",{"_index":116,"title":{},"body":{"classes/BaseService.html":{}}}],["timestamp",{"_index":249,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["touch",{"_index":325,"title":{},"body":{"index.html":{}}}],["trace",{"_index":168,"title":{},"body":{"injectables/LoggerService.html":{}}}],["true",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["twitter",{"_index":331,"title":{},"body":{"index.html":{}}}],["type",{"_index":87,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"modules/DatabaseModule.html":{},"injectables/LoggerService.html":{},"classes/User.html":{},"coverage.html":{},"classes/createUsersTable1609749949313.html":{}}}],["typeorm",{"_index":106,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{},"classes/User.html":{},"classes/createUsersTable1609749949313.html":{},"dependencies.html":{}}}],["typeorm/repository/entityid",{"_index":108,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["typeormmodule",{"_index":128,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmodule.forrootasync",{"_index":133,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typescript",{"_index":288,"title":{},"body":{"index.html":{}}}],["unique",{"_index":207,"title":{},"body":{"classes/User.html":{}}}],["unique([\"email",{"_index":210,"title":{},"body":{"classes/User.html":{}}}],["unique(undefined)@column",{"_index":192,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":302,"title":{},"body":{"index.html":{}}}],["up",{"_index":234,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["up(queryrunner",{"_index":238,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["update",{"_index":79,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["update(id",{"_index":102,"title":{},"body":{"classes/BaseService.html":{},"interfaces/BaseServiceInterface.html":{}}}],["updatedat",{"_index":187,"title":{},"body":{"classes/User.html":{},"classes/createUsersTable1609749949313.html":{}}}],["updatedatecolumn",{"_index":208,"title":{},"body":{"classes/User.html":{}}}],["updatedatecolumn({default",{"_index":203,"title":{},"body":{"classes/User.html":{}}}],["usefactory",{"_index":134,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["user",{"_index":130,"title":{"classes/User.html":{}},"body":{"modules/DatabaseModule.html":{},"classes/User.html":{},"coverage.html":{}}}],["username",{"_index":140,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["users",{"_index":209,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"classes/createUsersTable1609749949313.html":{}}}],["users/user.entity",{"_index":131,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["varchar",{"_index":247,"title":{},"body":{"classes/createUsersTable1609749949313.html":{}}}],["verbose",{"_index":159,"title":{},"body":{"injectables/LoggerService.html":{}}}],["verbose(message",{"_index":172,"title":{},"body":{"injectables/LoggerService.html":{}}}],["void",{"_index":166,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warn",{"_index":160,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warn(message",{"_index":174,"title":{},"body":{"injectables/LoggerService.html":{}}}],["watch",{"_index":297,"title":{},"body":{"index.html":{}}}],["website",{"_index":329,"title":{},"body":{"index.html":{}}}],["world",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":165,"title":{},"body":{"injectables/LoggerService.html":{}}}],["you'd",{"_index":318,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport databaseConfig from \"@config/database.config\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { DatabaseModule } from \"./database/database.module\";\nimport { LoggerModule } from './logger/logger.module'\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [databaseConfig],\n    }),\n    DatabaseModule,\n    LoggerModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return \"Hello World!\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generic/base.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            BaseServiceInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                logger\n                            \n                            \n                                    Protected\n                                    Readonly\n                                repository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: R, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/generic/base.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    R\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/generic/base.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            repository\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     R\n\n                        \n                    \n                        \n                            \n                                    Defined in src/generic/base.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/generic/base.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in src/generic/base.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/generic/base.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in src/generic/base.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/generic/base.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, DeleteResult, Repository } from \"typeorm\";\nimport { BaseServiceInterface } from \"./base.service.interface\";\nimport { EntityId } from \"typeorm/repository/EntityId\";\nimport { LoggerService } from \"../logger/custom.logger\";\n\nexport class BaseService>\n  implements BaseServiceInterface {\n  protected readonly repository: R;\n  protected readonly logger: LoggerService;\n\n  constructor(repository: R, logger: LoggerService) {\n    this.repository = repository;\n    this.logger = logger;\n  }\n\n  findAll(data: any): Promise {\n    return this.repository.find();\n  }\n\n  findById(id: EntityId): Promise {\n    return this.repository.findOne(id);\n  }\n\n  create(data: any): Promise {\n    return this.repository.save(data);\n  }\n\n  async update(id: EntityId, data: any): Promise {\n    await this.repository.update(id, data);\n    return this.findById(id);\n  }\n\n  delete(id: EntityId): Promise {\n    return this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseServiceInterface.html":{"url":"interfaces/BaseServiceInterface.html","title":"interface - BaseServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generic/base.service.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    create\n                                \n                                \n                                    delete\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findById\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/generic/base.service.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in src/generic/base.service.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/generic/base.service.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in src/generic/base.service.interface.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: EntityId, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/generic/base.service.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityId } from \"typeorm/repository/EntityId\";\nimport { DeleteResult } from \"typeorm\";\n\nexport interface BaseServiceInterface {\n  create(data: any): Promise;\n\n  findAll(data: any): Promise;\n\n  update(id: EntityId, data: any): Promise;\n\n  delete(id: EntityId): Promise;\n\n  findById(id: EntityId): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { User } from \"../users/user.entity\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        type: \"mysql\",\n        host: configService.get(\"databaseHost\"),\n        port: configService.get(\"databasePort\"),\n        username: configService.get(\"databaseUsername\"),\n        password: configService.get(\"databasePassword\"),\n        database: configService.get(\"databaseName\"),\n        entities: [User]\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService \n\nLoggerService \n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from \"@nestjs/common\";\nimport { LoggerService } from \"./custom.logger\";\n\n@Global()\n@Module({\n  providers: [LoggerService],\n  exports: [LoggerService],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger/custom.logger.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Logger\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logger/custom.logger.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logger/custom.logger.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logger/custom.logger.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logger/custom.logger.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logger/custom.logger.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, Scope } from \"@nestjs/common\";\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class LoggerService extends Logger {\n  error(message: string, trace?: string, context?: string): void {\n    // TO DO\n    super.error(message, trace, context);\n  }\n\n  warn(message: string, context?: string): void {\n    // TO DO\n    super.warn(message, context);\n  }\n\n  log(message: string, context?: string): void {\n    // TO DO\n    super.log(message, context);\n  }\n\n  debug(message: string, context?: string): void {\n    // TO DO\n    super.debug(message, context);\n  }\n\n  verbose(message: string, context?: string): void {\n    // TO DO\n    super.verbose(message, context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                paidType\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({default: now(), nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Unique(undefined)@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paidType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 'FREE'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({default: now(), nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.entity.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from \"typeorm\";\n\n@Entity({ name: \"users\" })\nexport class User extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Unique([\"email\"])\n  @Column()\n  email: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  password: string;\n\n  @Column({ default: \"FREE\" })\n  paidType: string;\n\n  @CreateDateColumn({\n    default: `now()`,\n    nullable: true,\n  })\n  createdAt: string;\n\n  @UpdateDateColumn({\n    default: `now()`,\n    nullable: true,\n  })\n  updatedAt: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/migration/1609749949313-create-users-table.ts\n            \n            class\n            createUsersTable1609749949313\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generic/base.service.interface.ts\n            \n            interface\n            BaseServiceInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generic/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/logger/custom.logger.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createUsersTable1609749949313.html":{"url":"classes/createUsersTable1609749949313.html","title":"class - createUsersTable1609749949313","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createUsersTable1609749949313\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migration/1609749949313-create-users-table.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migration/1609749949313-create-users-table.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migration/1609749949313-create-users-table.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner, Table } from \"typeorm\";\n\nexport class createUsersTable1609749949313 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.createTable(\n      new Table({\n        name: \"users\",\n        columns: [\n          {\n            name: \"id\",\n            type: \"int\",\n            isPrimary: true,\n            isGenerated: true,\n            generationStrategy: \"increment\",\n          },\n          {\n            name: \"email\",\n            type: \"varchar\",\n            isUnique: true,\n          },\n          {\n            name: \"name\",\n            type: \"varchar\",\n          },\n          {\n            name: \"password\",\n            type: \"varchar\",\n          },\n          {\n            name: \"paidType\",\n            type: \"varchar\",\n            default: \"'FREE'\",\n          },\n          {\n            name: \"createdAt\",\n            type: \"timestamp\",\n            default: \"now()\",\n          },\n          {\n            name: \"updatedAt\",\n            type: \"timestamp\",\n            default: \"now()\",\n          },\n        ],\n      })\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.dropTable(\"users\");\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            express-rate-limit : ^5.2.3\n        \n            helmet : ^4.3.1\n        \n            mysql : ^2.18.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
